/* ทุกคำที่ใช้ในนี้ เพื่อความเข้าใจของตัวเองล้วน ๆ เรย */

/* import font อีกแบบนึง ในภาษาCSS */
@import url("https://fonts.googleapis.com/css?family=Mitr:300,400,700&display=swap&subset=thai");

h1 {
  color: red;
}

.width200 {
  width: 200px;
  height: 200px;
}

.background-color {
  background-color: #df3434;
}

.background-image {
  background-image: url("/image/firefox.jpg");
  background-position: center;
  /* background-size: contain; */
  background-repeat: no-repeat;
}

.border {
  /* border มีลำดับดังนี้: size -> Style -> สี */
  /* Style: solid = เส้นปกติไม่มีขาด  dotted = เส้นจุดกลม ๆ  dashed = เส้นจุดสี่เหลี่ยม ๆ */
  border: 10px solid red;
  border: 10px dotted red;
  border: 10px dashed red;
  border-bottom: 5px solid blue;
  border-left: 15px dotted green;

  /* เพิ่มเติม: ลำดับการเรียกของ CSS คือ กันไหนมาหลังจะถูกใช้ เพราะจะไปทับอันก่อนหน้านี้
  (คล้าย ๆ เลย์Stack) */
}

.margin {
  /* margin เอาไว้แบ่งช่องว่าง
  มีลำดับดังนี้: บน -> ขวา -> ล่าง- > ซ้าย */
  margin: 50px 100px 30px 100px;
  background-color: yellowgreen;

  /* ถ้าอยากกำหนดแค่ด้านใดด้านหนึ่ง
  margin-left: 200px;
  margin-top: 100px;
  */
}

.padding {
  /* padding จะกินพท.ข้างในelements นั้น ๆ 
  มีลำดับดังนี้: บน -> ขวา -> ล่าง- > ซ้าย */
  background-color: goldenrod;
  padding: 50px 30px 20px 10px;

  /* การใส่แค่ 1 ขนาด จะเป็นการใช้ขนาดนั้นกับทุก ๆ ด้านเลย
  padding: 50px ;
   */

  /* การใส่แค่ 2 ขนาด บนล่างจะมีขนาด 50 เท่ากัน และซ้ายขวาก็จะมีขนาด 30 เท่ากัน
  padding: 50px 30px;
  */

  /* ถ้าอยากกำหนดแค่ด้านใดด้านหนึ่ง
  padding-left: 50px;
  padding-top: 100px;
  */
}

.width-height {
  width: 300px;
  height: 400px;
  background-color: greenyellow;

  /* การกำหนดค่าที่มากที่สุด 
  max-width: 200px;
  max-height: 200px;
  */

  /* มีหน่วยอื่น ๆ 
  width: 50%; 
    50% คือ 50% ของตัวparent (จากในcss.html ตัวparent ก็คือ body)
    ค่า % จะใช้กับ height ไม่ได้
    
  height: 30vw;
    30vw คือ 30% ของ view width (30% ของที่คนเห็น width)

  height: 100vh; 
    100vh คือ 100% ของ view height (100% ของที่คนเห็น height)

  width: 200pt;
    200pt คือ 200 Points โดย Points เป็นค่าที่ตายตัว ไม่เหมือน px ที่แต่ละจอจะไม่เท่ากัน

  width: 15cm;
  เป็นค่าที่ตายตัว 
  */
}

/* mixed-width ในที่นี้หมายถึงมีทั้ง margin border padding */
.mixed-width {
  width: 200px;
  height: 200px;
  padding: 30px;
  margin: 50px;
  border: 10px solid red;
}

/* outline จะคล้าย ๆ กับ border แต่ outline จะสามารถไปoverlap กับอันอื่นได้*/
.outline {
  /* มีลำดับดังนี้ size -> style -> สี */
  outline: 15px double green;

  /* outline-offset คือ เว้นห่างจาก div อื่น*/
  outline-offset: 15px;
  border: 10px solid red;
  /* margin: 30px; */
}

/* */
.text {
  margin: 100px;
}

/* */
.text p {
  text-align: center;
  /* text-align: justify; 
  justify คือจัดให้ทั้งซ้ายและขวา ตรงข้ามกันหมด 
  โดยเพิ่มช่องว่างระหว่างคำเพื่อให้ทั้งสองด้านตรงกันหมด  */
}

.text .left {
  text-align: left;

  /* text-decoration คือ การตกแต่งtext */
  text-decoration: underline; /* ขีดเส้นใต้ */
  text-decoration: overline; /*ขีดเส้นข้างบน */
  text-decoration: line-through; /* ขีดเส้นตรงกลาง */
  text-decoration-color: red;
}

.text .right {
  text-align: right;

  /* text-transform คือ เปลี่ยนเป็นพิมพ์เล็ก พิมพ์ใหญ่ ขึ้นต้นด้วยตัวใหญ่*/
  text-transform: uppercase;
  text-transform: lowercase;
  text-transform: capitalize;
}

.text .indent {
  /* text-indent คือ การย่อหน้า */
  text-indent: 50px;

  /* letter-spacing คือ ช่องว่างระหว่างตัวอักษร */
  letter-spacing: 3px;
  /* letter-spacing: -1px;  สามารถใส่เป็นค่าลบได้*/

  font-size: 20px;

  /* line-height ความสูงของtext แต่บรรทัด
  โดยปกติแล้วline-height จะสัมพันธ์กันกับfont-size 
  ถ้าเราใส่ค่ากำหนดไป 1.5 จะแปลว่า 1.5 เท่าของ ขนาดเดิม 
  แต่ถ้าใส่px กำหนดด้วยจะเป็นกำหนดค่าจริง ๆ เลย จะไม่สัมพันธ์กับ font-size แล้ว */
  line-height: 30px;

  /* word-spacing คือ ช่องว่างระหว่างword สามารถใส่เป็นค่าลบได้*/
  word-spacing: 20px;

  /* text-shadow คือ เงาของtext
  มีลำดับดังนี้ ตำแหน่งแนวนอน -> ตำแหน่งแนวตั้ง -> รัศมีของการเบลอ -> สี */
  text-shadow: 5px 5px 10px red;
}

/* */
.font {
  margin: 100px;
  font-size: 20px;
}

/* p:first-child แปลว่า p ที่เป็นตัว first-child */
.font p:first-child {
  /* เปลี่ยนfont family*/
  font-family: arial;
}

html {
  font-size: 20px;
  /* ขนาดfont ของทั้งเว็บ */
}

/* p:nth-child(2) คือ p ที่ลำดับที่ 2*/
.font p:nth-child(2) {
  font-family: "Mitr";

  /* ความหนาของfont พวก light normal bold
  หรือใส่เป็นตัวเลขก็ได้ เช่น ของMitr 700 จะเป็น bold */
  font-weight: normal;

  font-size: 0.8em;
  /* หน่วย em คือ ขนาดของfontจะสัมพันธ์ตามparent 
  0.8 em คือ 80% ของparent */
}

/* p:nth-child(3) คือ p ที่ลำดับที่ 3 */
.font p:nth-child(3) {
  font-family: "Mitr";
  font-weight: normal;
  font-size: 1em;
  font-style: italic;
}

/* เลือกไปที่ i แรก */
.icon i:first-child {
  /* ปรับสีของicon */
  color: red;

  /* ปรับขนาดของicon */
  font-size: 16px;
}

/* tag a ที่ยังไม่เคยกดเข้าไปจะมีสี blue */
.link a:link {
  color: blue;
}

/* tag a ที่เคยกดเข้าไปจะมีสี red */
.link a:visited {
  color: red;
}

/* tag a เวลากดค้างสี greenyellow 
แต่เหมือนจะไม่เห็นถ้าทับกันกับ .link a:hover */
.link a:active {
  color: greenyellow;
}

/* tag a เวลาเอาเมาส์ไปจ่อ */
.link a:hover {
  color: orange;
  background-color: black;
}

/* */
.list ul {
  list-style-type: disc; /* กลม ๆ */
  background: rebeccapurple;
}

/* */
.list ul li {
  /*  ตำแหน่งของlist (พวกกลม ๆ ) */
  list-style-position: outside;
  background-color: #df3434;
  margin: 5px;
  margin-left: 20px;
}

.display p:first-child {
  display: none; /* none จะไม่ถูกแสดง */
}

.display p:nth-child(2) {
  display: block; /* block เป็นdefault ของ p อยู่แล้ว (ดังนั้นจะไม่มีไรเกิดขึ้น)*/
}

.display p:nth-child(3) {
  display: inline;
}
.display p:nth-child(4) {
  display: inline;
  /* จะได้ .display p:nth-child(3) ต่อกับ .display p:nth-child(4)*/
}

.display p:nth-child(6) {
  display: inline-block; /* ??? */
}

/* flex คือ ตัวช่วยในการวาง Layout ของ CSS */
.flex {
  display: flex;

  /* ทิศทางของ flex */
  flex-direction: row;

  justify-content: space-around; /* อยู่พท.ที่เหลืออยู่เอาเอง */
  align-items: flex-start;
  height: 200px;
}
/* .flex .flex-item {
  flex: 1;  
  height: 30px;
  margin: 5px;
  background-color: yellow;
} */

/* */
.flex .flex-item:first-child {
  /* flex: 3; */
  height: 30px;
  width: 100px;
  margin: 5px;
  background-color: yellow;
}

/* */
.flex .flex-item:nth-child(2) {
  /* flex: 3; */
  height: 30px;
  width: 100px;
  margin: 5px;
  background-color: yellow;
}

.position {
  position: relative; /* relative ต้องใส่เมื่อ child เป็น absolute */
  height: 1000px;
}

.position div:first-child {
  position: static; /* static เป็นปกติทั่ว ๆ ไป แสดงลำดับจากบนลงล่างดันมาเรื่อย ๆ  */
}

.position div:nth-child(2) {
  position: absolute; /* absolute เป็นแบบไม่มีspaceของตัวเอง จะถูกซ้อนทับกับอันอื่น*/
  top: 200px; /* นับจากข้างบนลงไป 200 px */
  right: 0;
  bottom: 0;
  left: 0;
}

.position div:nth-child(3) {
  position: relative; /* relative จะคล้าย ๆ กับ static แต่กำหนดเพิ่มได้*/
  top: 100px;
  left: 100px;
}

.position div:nth-child(4) {
  position: fixed; /* fixed จะถูก fixed อยู่กับที่เดิมในหน้าจอไปตลอด */
  top: 0px;
  left: 0px;
}

.position div:nth-child(5) {
  position: sticky; /* sticky คือเมื่อเลื่อนลงมา จะถูก sticky อยู่กับที่ */
  top: 10px; /* เมื่อเลื่อนลงมาห่าง 10 px จะทำการ sticky*/
}

/* overflow คือ ถ้าข้อมูลใหญ่เกินจะแสดงมีตัวแถบเลื่อน ๆ มาแสดง (Scroll) */
.overflow {
  overflow: auto; /* ถ้าข้อมูลใหญ่เกินจะแสดง */
  height: 300px;
}

.overflow .box {
  height: 1000px;
  width: 150%; /* ใหญ่กว่าตัวเอง 50% */
  background-color: #df3434;
}

/* float  แปลว่า “ลอย” 
  ดังนั้นในCSS floatจึงมีลักษณะลอยออกมาในตำแหน่งที่เรากำหนด */
.float {
}

/* */
.float .left {
  float: left;
  background-color: green;
  width: 100px;
  height: 100px;
}

/* */
.float .right {
  float: right;
  background-color: green;
  width: 100px;
  height: 100px;
}

/* */
.float .normal {
  background-color: blueviolet;
  width: 100px;
  height: 100px;
}
